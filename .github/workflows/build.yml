name: Build

permissions:
  packages: write

on:
  push:
    tags:
      - "*"

jobs:
  check-tag-and-version:
    runs-on: ubuntu-latest
    container: rust:1.76
    steps:
      - uses: actions/checkout@v4
      - name: Check version in manifest
        run: |
          cargo install cargo-get
          version="$(cargo-get package.version)"
          if [ "$version" != '${{ github.ref_name }}' ]
          then exit 1
          fi

  build-and-push-docker-image:
    name: Build and push docker image
    runs-on: ubuntu-latest
    needs:
      - check-tag-and-version
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build And Push Docker Image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/lemonnekogh/reminder-bot:${{ github.ref_name }}
            ghcr.io/lemonnekogh/reminder-bot:latest

  build-and-upload-release:
    name: Build and upload release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install postgres 15 for windows
        uses: crazy-max/ghaction-chocolatey@v3
        with:
          args: install postgresql15
        if: ${{ matrix.os == 'windows-latest' }}
      - name: Link postgres 15 lib dir for windows
        run: set PQ_LIB_DIR="C:\ProgramData\chocolatey\lib\postgresql10"
        if: ${{ matrix.os == 'windows-latest' }}
      - name: Set path for windows
        run: set path="%path%;C:\Program Files\PostgreSQL\10\lib;C:\Program Files\PostgreSQL\10\bin"
        if: ${{ matrix.os == 'windows-latest' }}
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build
        run: cargo build --release
#      - name: Upload
#        uses: softprops/action-gh-release@v1
      - uses: actions/upload-artifact@v4
        with:
          name: test-artifact
          path: target/release/reminder_bot(.exe)
